{
  "version": 3,
  "sources": ["../../react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts", "../../react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts", "../../react-router/lib/use-sync-external-store-shim/index.ts", "../../react-router/lib/context.ts", "../../react-router/lib/hooks.tsx", "../../react-router/lib/components.tsx", "../../react-router/index.ts", "../../react-router-dom/dom.ts", "../../react-router-dom/index.tsx"],
  "sourcesContent": ["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n", "/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n", "import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\n// Contexts for data routers\nexport const DataStaticRouterContext =\n  React.createContext<StaticHandlerContext | null>(null);\nif (__DEV__) {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n", "import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n  DataStaticRouterContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>\uD83D\uDCBF Hey developer \uD83D\uDC4B</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RenderedRoute\n        match={match}\n        routeContext={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      >\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  return (\n    <DataRouterContext.Provider\n      value={{\n        router,\n        navigator,\n        static: false,\n        // Do we need this?\n        basename,\n      }}\n    >\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          basename={router.basename}\n          location={router.state.location}\n          navigationType={router.state.historyAction}\n          navigator={navigator}\n        >\n          {router.state.initialized ? <Routes /> : fallbackElement}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n  return <>{children}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n", "import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  enhanceManualRouteObjects,\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  DataStaticRouterContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  DataStaticRouterContext as UNSAFE_DataStaticRouterContext,\n  enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects,\n};\n", "import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n\n    let toPathname = path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(resolvedAction, { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"],
  "mappings": "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",
  "names": ["isPolyfill", "x", "y", "is", "Object", "useState", "useEffect", "useLayoutEffect", "useDebugValue", "React", "didWarnOld18Alpha", "didWarnUncachedGetSnapshot", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "console", "error", "value", "cachedValue", "inst", "forceUpdate", "checkIfSnapshotChanged", "handleStoreChange", "latestGetSnapshot", "prevValue", "nextValue", "canUseDOM", "window", "document", "createElement", "isServerEnvironment", "shim", "server", "client", "module", "DataStaticRouterContext", "createContext", "displayName", "DataRouterContext", "DataRouterStateContext", "AwaitContext", "NavigationContext", "LocationContext", "RouteContext", "outlet", "matches", "RouteErrorContext", "useHref", "to", "relative", "useInRouterContext", "invariant", "basename", "navigator", "useContext", "hash", "pathname", "search", "useResolvedPath", "joinedPathname", "joinPaths", "createHref", "useLocation", "location", "useNavigationType", "navigationType", "useMatch", "pattern", "useMemo", "matchPath", "useNavigate", "locationPathname", "routePathnamesJson", "JSON", "stringify", "getPathContributingMatches", "map", "match", "pathnameBase", "activeRef", "useRef", "current", "navigate", "useCallback", "options", "warning", "go", "path", "resolveTo", "parse", "replace", "push", "state", "OutletContext", "useOutletContext", "useOutlet", "context", "useParams", "routeMatch", "length", "params", "useRoutes", "routes", "locationArg", "dataRouterStateContext", "parentMatches", "parentParams", "parentPathname", "parentPathnameBase", "parentRoute", "route", "parentPath", "warningOnce", "endsWith", "locationFromContext", "parsedLocationArg", "parsePath", "startsWith", "remainingPathname", "slice", "matchRoutes", "element", "undefined", "renderedMatches", "_renderMatches", "assign", "key", "NavigationType", "Pop", "DefaultErrorElement", "useRouteError", "message", "isRouteErrorResponse", "status", "statusText", "Error", "stack", "lightgrey", "preStyles", "padding", "backgroundColor", "codeStyles", "fontStyle", "RenderErrorBoundary", "Component", "constructor", "props", "getDerivedStateFromError", "getDerivedStateFromProps", "componentDidCatch", "errorInfo", "render", "component", "children", "RenderedRoute", "routeContext", "dataStaticRouterContext", "errorElement", "_deepestRenderedBoundaryId", "id", "dataRouterState", "errors", "errorIndex", "findIndex", "m", "Math", "min", "reduceRight", "index", "getChildren", "concat", "DataRouterHook", "DataRouterStateHook", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useDataRouterState", "useNavigation", "UseNavigation", "navigation", "useRevalidator", "dataRouterContext", "UseRevalidator", "revalidate", "router", "revalidation", "useMatches", "loaderData", "UseMatches", "data", "handle", "useLoaderData", "UseLoaderData", "thisRoute", "useRouteLoaderData", "routeId", "UseRouteLoaderData", "useActionData", "UseActionData", "values", "actionData", "UseRouteError", "useAsyncValue", "_data", "useAsyncError", "_error", "alreadyWarned", "cond", "RouterProvider", "fallbackElement", "useSyncExternalStoreShim", "n", "opts", "preventScrollReset", "static", "historyAction", "initialized", "MemoryRouter", "initialEntries", "initialIndex", "historyRef", "createMemoryHistory", "v5Compat", "history", "setState", "action", "listen", "Navigate", "Outlet", "Route", "_props", "Router", "basenameProp", "locationProp", "staticProp", "navigationContext", "trailingPathname", "stripBasename", "Routes", "createRoutesFromChildren", "Await", "resolve", "AwaitRenderStatus", "neverSettledPromise", "Promise", "AwaitErrorBoundary", "promise", "pending", "success", "defineProperty", "get", "renderError", "reject", "catch", "_tracked", "then", "AbortedDeferredError", "ResolveAwait", "Children", "forEach", "isValidElement", "type", "Fragment", "apply", "name", "treePath", "join", "caseSensitive", "loader", "hasErrorBoundary", "shouldRevalidate", "renderMatches", "enhanceManualRouteObjects", "routeClone", "createMemoryRouter", "createRouter", "hydrationData", "initialize", "defaultMethod", "defaultEncType", "isHtmlElement", "object", "tagName", "isButtonElement", "toLowerCase", "isFormElement", "isInputElement", "isModifiedEvent", "event", "metaKey", "altKey", "ctrlKey", "shiftKey", "shouldProcessLinkClick", "target", "button", "createSearchParams", "init", "URLSearchParams", "Array", "isArray", "Object", "keys", "reduce", "memo", "key", "value", "concat", "map", "v", "getSearchParamsForLocation", "locationSearch", "defaultSearchParams", "searchParams", "has", "getAll", "forEach", "append", "getFormSubmissionInfo", "defaultAction", "options", "method", "action", "encType", "formData", "submissionTrigger", "getAttribute", "FormData", "name", "type", "form", "Error", "protocol", "host", "window", "location", "url", "URL", "createBrowserRouter", "routes", "opts", "createRouter", "basename", "history", "createBrowserHistory", "hydrationData", "__staticRouterHydrationData", "enhanceManualRouteObjects", "initialize", "createHashRouter", "createHashHistory", "BrowserRouter", "children", "historyRef", "useRef", "current", "v5Compat", "state", "setState", "useState", "React", "useLayoutEffect", "listen", "createElement", "Router", "navigationType", "navigator", "HashRouter", "HistoryRouter", "displayName", "Link", "forwardRef", "LinkWithRef", "ref", "onClick", "relative", "reloadDocument", "replace", "to", "preventScrollReset", "rest", "href", "useHref", "internalOnClick", "useLinkClickHandler", "handleClick", "defaultPrevented", "_extends", "NavLink", "NavLinkWithRef", "ariaCurrentProp", "caseSensitive", "className", "classNameProp", "end", "style", "styleProp", "path", "useResolvedPath", "useLocation", "routerState", "useContext", "DataRouterStateContext", "toPathname", "pathname", "locationPathname", "nextLocationPathname", "navigation", "isActive", "startsWith", "charAt", "length", "isPending", "ariaCurrent", "undefined", "filter", "Boolean", "join", "Form", "props", "FormImpl", "forwardedRef", "onSubmit", "fetcherKey", "routeId", "submit", "useSubmitImpl", "formMethod", "formAction", "useFormAction", "submitHandler", "preventDefault", "submitter", "nativeEvent", "currentTarget", "ScrollRestoration", "getKey", "storageKey", "useScrollRestoration", "DataRouterHook", "DataRouterStateHook", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "DataRouterContext", "invariant", "useDataRouterState", "replaceProp", "navigate", "useNavigate", "useCallback", "createPath", "useSearchParams", "defaultInit", "warning", "defaultSearchParamsRef", "useMemo", "search", "setSearchParams", "nextInit", "navigateOptions", "newSearchParams", "useSubmit", "router", "UseSubmitImpl", "document", "formEncType", "fetch", "NavigationContext", "routeContext", "RouteContext", "match", "matches", "slice", "resolvedAction", "hash", "route", "index", "params", "delete", "toString", "joinPaths", "createFetcherForm", "FetcherForm", "fetcherId", "useFetcher", "UseFetcher", "id", "String", "load", "fetcher", "getFetcher", "fetcherWithComponents", "useEffect", "console", "warn", "deleteFetcher", "useFetchers", "UseFetchers", "fetchers", "values", "SCROLL_RESTORATION_STORAGE_KEY", "savedScrollPositions", "UseScrollRestoration", "restoreScrollPosition", "useMatches", "useNavigation", "scrollRestoration", "useBeforeUnload", "scrollY", "sessionStorage", "setItem", "JSON", "stringify", "sessionPositions", "getItem", "parse", "e", "disableScrollRestoration", "enableScrollRestoration", "scrollTo", "el", "getElementById", "scrollIntoView", "callback", "addEventListener", "removeEventListener", "cond", "message"]
}
